#content {
  &.is-meal {
    #layer-list {
      position: fixed;
      max-width: 100%;
      height: 100%;
      overflow: hidden;

      .layer-overlay {
        position: fixed;
        top: 0;
        left: 0;
      }
    }

    #layer-meal {
      top: 0;

      .layer-overlay {
        position: fixed;
        top: 0;
        left: 0;
      }
    }
  }

  &.is-dish,
  &.is-select {
    #layer-dish {
      top: 0;

      .layer-content {
        position: absolute;
        max-height: 100%;
        height: 100%;
        overflow-y: auto;
        overflow-x: hidden;
      }
    }
  }
  &.is-alert {
    #layer-alert {
      top: 0;
    }
  }
}

.layer {
  position: fixed;
  width: 100%;
  min-height: 100%;
  height: 100%;
  top: 100%;
  left: 0;
  overflow: hidden;
}

.layer-overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 0;
  background-color: transparentize($color-marine-dark, 0.1);
  backdrop-filter: blur(0.25rem);
}

.layer-content {
  position: fixed;
  width: 100%;
  max-width: $layoutWidthMax;
  height: 100%;
  margin: 0 auto;
  z-index: 1;
}

.layer-heading {
  position: sticky;
  top: 0;
  z-index: 10;
  width: 100%;
  filter: drop-shadow(map-get($shadowSizes, 'small') color(darkest));
  @include flex(space-between, center);

  h1 {
    background-color: color(darkest);
    height: 4rem;
    max-width: calc(100% - 4rem);
    clip-path: polygon(0 0, calc(100% - 0.75rem) 0, 100% 0.75rem, 100% calc(100% - 0.75rem), calc(100% - 0.75rem) 100%, 0 100%);
    color: color(light);
    margin: 0;
    @include flex(center, center);
    @include spacing(padding-left);
    @include spacing(padding-right);
  }
}

.layer-close {
  position: relative;
  right: -1px;
  display: block;
  background-color: color(darkest);
  width: 3rem;
  height: 3rem;
  clip-path: polygon(0.75rem 0, 100% 0, 100% 100%, 0.75rem 100%, 0 calc(100% - 0.75rem), 0 0.75rem);
  transform-origin: right center;
  @include flex(center, center);
  @include transition(slow);
  @include interact() {
    transform: scale(1.05);

    svg {
      fill: color(lightest);
    }
  }

  svg {
    fill: color(light);
    width: 1rem;
    height: auto;
    transform: translateX(0.125rem);
    @include transition();
  }
}

#layer-list {
  position: relative;
  z-index: 0;
  top: 0;

  .layer-overlay {
    z-index: -1;
    background-image: linear-gradient(to bottom, color(dark), color(darkest));
  }

  .layer-content {
    position: relative;
    @include pseudo(before, block, absolute) {
      z-index: -1;
      left: spacing(mobile);
      width: calc(100% - #{spacing(mobile, 2)});
      height: 100%;
      @include shadow(large, color(darkest), inset);
      @include breakpoint(tablet) {
        left: spacing(tablet);
        width: calc(100% - #{spacing(tablet, 2)});
      }
      @include breakpoint(desktop) {
        left: spacing(desktop);
        width: calc(100% - #{spacing(desktop, 2)});
      }
      @include breakpoint(desktop-wide) {
        left: spacing(desktop-wide);
        width: calc(100% - #{spacing(desktop-wide, 2)});
      }
    }

    & > article {
      width: 100%;
      @include flex(center, center, column);

      & > header {
        width: 75%;
        margin: 0 auto;
        @include spacing(padding-top);
        @include spacing(padding-bottom);

        svg {
          display: block;
          width: 100%;
          height: auto;
          fill: color(darkest);
        }
      }
    }
  }
}

#layer-meal {
  z-index: 2000;

  .layer-content {
    position: relative;
    @include flex(center, flex-end);
  }
}

#layer-dish {
  z-index: 4000;

  .layer-content {
    left: 50%;
    transform: translateX(-50%);
  }
}

#layer-control {
  display: none;
  z-index: 6000;
  position: fixed;
  top: unset;
  bottom: 0;
  min-height: 1px;

  .layer-overlay {
    display: none;
  }

  .layer-content {
    & > * {
      z-index: 2;
    }
  }
}

#layer-alert {
  z-index: 8000;
}